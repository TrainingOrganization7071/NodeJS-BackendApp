name: CI/CD Pipeline For BackEnd NodeJs -- AKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env: 
  DOCKER_IMAGE_NAME : 'appbackend-azure'
  RESOURCE_GROUP: 'minimal_infra_auth'
  CLUSTER_NAME: 'aks_back'


jobs:
  # Build and test 
  Build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
        
      - name: Install dependencies
        run: npm ci
        
      - name: Run Build
        run: npm run build --if-present
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ./build


  Deploy_To_DockerHub:
    runs-on: ubuntu-latest
    needs: Build
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full commit history, not a shallow clone

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME}}:latest
          #tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME}}:${{github.sha}}


  Deploy_To_AKS:
    runs-on: ubuntu-latest
    needs: Deploy_To_DockerHub

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Set the target Azure Kubernetes Service (AKS) cluster. 
      - name : Target Azure Kubernetes Service
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.RESOURCE_GROUP }}
      
      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ./k8s/deployment.yml
          #images: |
          #  ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}


























