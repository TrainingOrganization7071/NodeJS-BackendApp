name: CI/CD Pipeline For BackEnd NodeJs -- AKS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env: 
  DOCKER_IMAGE_NAME : 'appbackend-azure'



jobs:
  # Build and test 
  Build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['20.x']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
        
      - name: Install dependencies
        run: npm ci
        
      - name: Run Build
        run: npm run build --if-present
        
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: ./build

     
  Deploy_To_DockerHub:
    runs-on: ubuntu-latest
    needs: Build
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full commit history, not a shallow clone

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME}}:${{github.run_id}}


  Deploy_To_AKS:
    runs-on: ubuntu-latest
    needs: Deploy_To_DockerHub

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubeconfig from secret
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

      - name: Deploy to AKS
        run: |
          kubectl apply -f deployment.yml

























